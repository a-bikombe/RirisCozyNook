{"ast":null,"code":"import { sanitizeStoryContextUpdate } from 'storybook/preview-api';\nimport { computesTemplateFromComponent } from './angular-beta/ComputesTemplateFromComponent';\nexport default function decorateStory(mainStoryFn, decorators) {\n  const returnDecorators = [cleanArgsDecorator, ...decorators].reduce((previousStoryFn, decorator) => context => {\n    const decoratedStory = decorator(update => {\n      return previousStoryFn({\n        ...context,\n        ...sanitizeStoryContextUpdate(update)\n      });\n    }, context);\n    return decoratedStory;\n  }, context => prepareMain(mainStoryFn(context), context));\n  return returnDecorators;\n}\nexport { decorateStory };\nconst prepareMain = (story, context) => {\n  let {\n    template\n  } = story;\n  const {\n    component\n  } = context;\n  const userDefinedTemplate = !hasNoTemplate(template);\n  if (!userDefinedTemplate && component) {\n    template = computesTemplateFromComponent(component, story.props, '');\n  }\n  return {\n    ...story,\n    ...(template ? {\n      template,\n      userDefinedTemplate\n    } : {})\n  };\n};\nfunction hasNoTemplate(template) {\n  return template === null || template === undefined;\n}\nconst cleanArgsDecorator = (storyFn, context) => {\n  if (!context.argTypes || !context.args) {\n    return storyFn();\n  }\n  const argsToClean = context.args;\n  context.args = Object.entries(argsToClean).reduce((obj, [key, arg]) => {\n    const argType = context.argTypes[key];\n    // Only keeps args with a control or an action in argTypes\n    if (argType?.action || argType?.control) {\n      return {\n        ...obj,\n        [key]: arg\n      };\n    }\n    return obj;\n  }, {});\n  return storyFn();\n};","map":{"version":3,"names":["sanitizeStoryContextUpdate","computesTemplateFromComponent","decorateStory","mainStoryFn","decorators","returnDecorators","cleanArgsDecorator","reduce","previousStoryFn","decorator","context","decoratedStory","update","prepareMain","story","template","component","userDefinedTemplate","hasNoTemplate","props","undefined","storyFn","argTypes","args","argsToClean","Object","entries","obj","key","arg","argType","action","control"],"sources":["C:/Users/Arianna/Code/RirisCozyNook/frontend/node_modules/@storybook/angular/dist/client/decorateStory.mjs"],"sourcesContent":["import { sanitizeStoryContextUpdate } from 'storybook/preview-api';\nimport { computesTemplateFromComponent } from './angular-beta/ComputesTemplateFromComponent';\nexport default function decorateStory(mainStoryFn, decorators) {\n    const returnDecorators = [cleanArgsDecorator, ...decorators].reduce((previousStoryFn, decorator) => (context) => {\n        const decoratedStory = decorator((update) => {\n            return previousStoryFn({\n                ...context,\n                ...sanitizeStoryContextUpdate(update),\n            });\n        }, context);\n        return decoratedStory;\n    }, (context) => prepareMain(mainStoryFn(context), context));\n    return returnDecorators;\n}\nexport { decorateStory };\nconst prepareMain = (story, context) => {\n    let { template } = story;\n    const { component } = context;\n    const userDefinedTemplate = !hasNoTemplate(template);\n    if (!userDefinedTemplate && component) {\n        template = computesTemplateFromComponent(component, story.props, '');\n    }\n    return {\n        ...story,\n        ...(template ? { template, userDefinedTemplate } : {}),\n    };\n};\nfunction hasNoTemplate(template) {\n    return template === null || template === undefined;\n}\nconst cleanArgsDecorator = (storyFn, context) => {\n    if (!context.argTypes || !context.args) {\n        return storyFn();\n    }\n    const argsToClean = context.args;\n    context.args = Object.entries(argsToClean).reduce((obj, [key, arg]) => {\n        const argType = context.argTypes[key];\n        // Only keeps args with a control or an action in argTypes\n        if (argType?.action || argType?.control) {\n            return { ...obj, [key]: arg };\n        }\n        return obj;\n    }, {});\n    return storyFn();\n};\n"],"mappings":"AAAA,SAASA,0BAA0B,QAAQ,uBAAuB;AAClE,SAASC,6BAA6B,QAAQ,8CAA8C;AAC5F,eAAe,SAASC,aAAaA,CAACC,WAAW,EAAEC,UAAU,EAAE;EAC3D,MAAMC,gBAAgB,GAAG,CAACC,kBAAkB,EAAE,GAAGF,UAAU,CAAC,CAACG,MAAM,CAAC,CAACC,eAAe,EAAEC,SAAS,KAAMC,OAAO,IAAK;IAC7G,MAAMC,cAAc,GAAGF,SAAS,CAAEG,MAAM,IAAK;MACzC,OAAOJ,eAAe,CAAC;QACnB,GAAGE,OAAO;QACV,GAAGV,0BAA0B,CAACY,MAAM;MACxC,CAAC,CAAC;IACN,CAAC,EAAEF,OAAO,CAAC;IACX,OAAOC,cAAc;EACzB,CAAC,EAAGD,OAAO,IAAKG,WAAW,CAACV,WAAW,CAACO,OAAO,CAAC,EAAEA,OAAO,CAAC,CAAC;EAC3D,OAAOL,gBAAgB;AAC3B;AACA,SAASH,aAAa;AACtB,MAAMW,WAAW,GAAGA,CAACC,KAAK,EAAEJ,OAAO,KAAK;EACpC,IAAI;IAAEK;EAAS,CAAC,GAAGD,KAAK;EACxB,MAAM;IAAEE;EAAU,CAAC,GAAGN,OAAO;EAC7B,MAAMO,mBAAmB,GAAG,CAACC,aAAa,CAACH,QAAQ,CAAC;EACpD,IAAI,CAACE,mBAAmB,IAAID,SAAS,EAAE;IACnCD,QAAQ,GAAGd,6BAA6B,CAACe,SAAS,EAAEF,KAAK,CAACK,KAAK,EAAE,EAAE,CAAC;EACxE;EACA,OAAO;IACH,GAAGL,KAAK;IACR,IAAIC,QAAQ,GAAG;MAAEA,QAAQ;MAAEE;IAAoB,CAAC,GAAG,CAAC,CAAC;EACzD,CAAC;AACL,CAAC;AACD,SAASC,aAAaA,CAACH,QAAQ,EAAE;EAC7B,OAAOA,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAKK,SAAS;AACtD;AACA,MAAMd,kBAAkB,GAAGA,CAACe,OAAO,EAAEX,OAAO,KAAK;EAC7C,IAAI,CAACA,OAAO,CAACY,QAAQ,IAAI,CAACZ,OAAO,CAACa,IAAI,EAAE;IACpC,OAAOF,OAAO,CAAC,CAAC;EACpB;EACA,MAAMG,WAAW,GAAGd,OAAO,CAACa,IAAI;EAChCb,OAAO,CAACa,IAAI,GAAGE,MAAM,CAACC,OAAO,CAACF,WAAW,CAAC,CAACjB,MAAM,CAAC,CAACoB,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,CAAC,KAAK;IACnE,MAAMC,OAAO,GAAGpB,OAAO,CAACY,QAAQ,CAACM,GAAG,CAAC;IACrC;IACA,IAAIE,OAAO,EAAEC,MAAM,IAAID,OAAO,EAAEE,OAAO,EAAE;MACrC,OAAO;QAAE,GAAGL,GAAG;QAAE,CAACC,GAAG,GAAGC;MAAI,CAAC;IACjC;IACA,OAAOF,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAON,OAAO,CAAC,CAAC;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}