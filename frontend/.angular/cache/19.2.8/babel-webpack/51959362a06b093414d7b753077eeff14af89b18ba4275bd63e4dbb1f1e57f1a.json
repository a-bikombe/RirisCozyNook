{"ast":null,"code":"import { getComponentDecoratorMetadata, getComponentInputsOutputs } from './utils/NgComponentAnalyzer';\n/**\n * Check if the name matches the criteria for a valid identifier. A valid identifier can only\n * contain letters, digits, underscores, or dollar signs. It cannot start with a digit.\n */\nconst isValidIdentifier = name => /^[a-zA-Z_$][a-zA-Z0-9_$]*$/.test(name);\n/**\n * Returns the property name, if it can be accessed with dot notation. If not, it returns\n * `this['propertyName']`.\n */\nexport const formatPropInTemplate = propertyName => isValidIdentifier(propertyName) ? propertyName : `this['${propertyName}']`;\nconst separateInputsOutputsAttributes = (ngComponentInputsOutputs, props = {}) => {\n  const inputs = ngComponentInputsOutputs.inputs.filter(i => i.templateName in props).map(i => i.templateName);\n  const outputs = ngComponentInputsOutputs.outputs.filter(o => o.templateName in props).map(o => o.templateName);\n  return {\n    inputs,\n    outputs,\n    otherProps: Object.keys(props).filter(k => ![...inputs, ...outputs].includes(k))\n  };\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n *\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nexport const computesTemplateFromComponent = (component, initialProps, innerTemplate = '') => {\n  const ngComponentMetadata = getComponentDecoratorMetadata(component);\n  const ngComponentInputsOutputs = getComponentInputsOutputs(component);\n  if (!ngComponentMetadata.selector) {\n    // Allow to add renderer component when NgComponent selector is undefined\n    return `<ng-container *ngComponentOutlet=\"storyComponent\"></ng-container>`;\n  }\n  const {\n    inputs: initialInputs,\n    outputs: initialOutputs\n  } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n  const templateInputs = initialInputs.length > 0 ? ` ${initialInputs.map(i => `[${i}]=\"${formatPropInTemplate(i)}\"`).join(' ')}` : '';\n  const templateOutputs = initialOutputs.length > 0 ? ` ${initialOutputs.map(i => `(${i})=\"${formatPropInTemplate(i)}($event)\"`).join(' ')}` : '';\n  return buildTemplate(ngComponentMetadata.selector, innerTemplate, templateInputs, templateOutputs);\n};\n/** Stringify an object with a placholder in the circular references. */\nfunction stringifyCircular(obj) {\n  const seen = new Set();\n  return JSON.stringify(obj, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      if (seen.has(value)) {\n        return '[Circular]';\n      }\n      seen.add(value);\n    }\n    return value;\n  });\n}\nconst createAngularInputProperty = ({\n  propertyName,\n  value,\n  argType\n}) => {\n  let templateValue;\n  switch (typeof value) {\n    case 'string':\n      templateValue = `'${value}'`;\n      break;\n    case 'object':\n      templateValue = stringifyCircular(value).replace(/'/g, '\\u2019').replace(/\\\\\"/g, '\\u201D').replace(/\"([^-\"]+)\":/g, '$1: ').replace(/\"/g, \"'\").replace(/\\u2019/g, \"\\\\'\").replace(/\\u201D/g, \"\\\\'\").split(',').join(', ');\n      break;\n    default:\n      templateValue = value;\n  }\n  return `[${propertyName}]=\"${templateValue}\"`;\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n *\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nexport const computesTemplateSourceFromComponent = (component, initialProps, argTypes) => {\n  const ngComponentMetadata = getComponentDecoratorMetadata(component);\n  if (!ngComponentMetadata) {\n    return null;\n  }\n  if (!ngComponentMetadata.selector) {\n    // Allow to add renderer component when NgComponent selector is undefined\n    return `<ng-container *ngComponentOutlet=\"${component.name}\"></ng-container>`;\n  }\n  const ngComponentInputsOutputs = getComponentInputsOutputs(component);\n  const {\n    inputs: initialInputs,\n    outputs: initialOutputs\n  } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n  const templateInputs = initialInputs.length > 0 ? ` ${initialInputs.map(propertyName => createAngularInputProperty({\n    propertyName,\n    value: initialProps[propertyName],\n    argType: argTypes?.[propertyName]\n  })).join(' ')}` : '';\n  const templateOutputs = initialOutputs.length > 0 ? ` ${initialOutputs.map(i => `(${i})=\"${formatPropInTemplate(i)}($event)\"`).join(' ')}` : '';\n  return buildTemplate(ngComponentMetadata.selector, '', templateInputs, templateOutputs);\n};\nconst buildTemplate = (selector, innerTemplate, inputs, outputs) => {\n  // https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements\n  const voidElements = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n  const firstSelector = selector.split(',')[0];\n  const templateReplacers = [[/(^.*?)(?=[,])/, '$1'], [/(^\\..+)/, 'div$1'], [/(^\\[.+?])/, 'div$1'], [/([\\w[\\]]+)(\\s*,[\\w\\s-[\\],]+)+/, `$1`], [/#([\\w-]+)/, ` id=\"$1\"`], [/((\\.[\\w-]+)+)/, (_, c) => ` class=\"${c.split`.`.join` `.trim()}\"`], [/(\\[.+?])/g, (_, a) => ` ${a.slice(1, -1)}`], [/([\\S]+)(.*)/, (template, elementSelector) => {\n    return voidElements.some(element => elementSelector === element) ? template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs} />`) : template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs}>${innerTemplate}</$1>`);\n  }]];\n  return templateReplacers.reduce((prevSelector, [searchValue, replacer]) => prevSelector.replace(searchValue, replacer), firstSelector);\n};","map":{"version":3,"names":["getComponentDecoratorMetadata","getComponentInputsOutputs","isValidIdentifier","name","test","formatPropInTemplate","propertyName","separateInputsOutputsAttributes","ngComponentInputsOutputs","props","inputs","filter","i","templateName","map","outputs","o","otherProps","Object","keys","k","includes","computesTemplateFromComponent","component","initialProps","innerTemplate","ngComponentMetadata","selector","initialInputs","initialOutputs","templateInputs","length","join","templateOutputs","buildTemplate","stringifyCircular","obj","seen","Set","JSON","stringify","key","value","has","add","createAngularInputProperty","argType","templateValue","replace","split","computesTemplateSourceFromComponent","argTypes","voidElements","firstSelector","templateReplacers","_","c","trim","a","slice","template","elementSelector","some","element","reduce","prevSelector","searchValue","replacer"],"sources":["C:/Users/Arianna/Code/RirisCozyNook/frontend/node_modules/@storybook/angular/dist/client/angular-beta/ComputesTemplateFromComponent.mjs"],"sourcesContent":["import { getComponentDecoratorMetadata, getComponentInputsOutputs, } from './utils/NgComponentAnalyzer';\n/**\n * Check if the name matches the criteria for a valid identifier. A valid identifier can only\n * contain letters, digits, underscores, or dollar signs. It cannot start with a digit.\n */\nconst isValidIdentifier = (name) => /^[a-zA-Z_$][a-zA-Z0-9_$]*$/.test(name);\n/**\n * Returns the property name, if it can be accessed with dot notation. If not, it returns\n * `this['propertyName']`.\n */\nexport const formatPropInTemplate = (propertyName) => isValidIdentifier(propertyName) ? propertyName : `this['${propertyName}']`;\nconst separateInputsOutputsAttributes = (ngComponentInputsOutputs, props = {}) => {\n    const inputs = ngComponentInputsOutputs.inputs\n        .filter((i) => i.templateName in props)\n        .map((i) => i.templateName);\n    const outputs = ngComponentInputsOutputs.outputs\n        .filter((o) => o.templateName in props)\n        .map((o) => o.templateName);\n    return {\n        inputs,\n        outputs,\n        otherProps: Object.keys(props).filter((k) => ![...inputs, ...outputs].includes(k)),\n    };\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n *\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nexport const computesTemplateFromComponent = (component, initialProps, innerTemplate = '') => {\n    const ngComponentMetadata = getComponentDecoratorMetadata(component);\n    const ngComponentInputsOutputs = getComponentInputsOutputs(component);\n    if (!ngComponentMetadata.selector) {\n        // Allow to add renderer component when NgComponent selector is undefined\n        return `<ng-container *ngComponentOutlet=\"storyComponent\"></ng-container>`;\n    }\n    const { inputs: initialInputs, outputs: initialOutputs } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n    const templateInputs = initialInputs.length > 0\n        ? ` ${initialInputs.map((i) => `[${i}]=\"${formatPropInTemplate(i)}\"`).join(' ')}`\n        : '';\n    const templateOutputs = initialOutputs.length > 0\n        ? ` ${initialOutputs.map((i) => `(${i})=\"${formatPropInTemplate(i)}($event)\"`).join(' ')}`\n        : '';\n    return buildTemplate(ngComponentMetadata.selector, innerTemplate, templateInputs, templateOutputs);\n};\n/** Stringify an object with a placholder in the circular references. */\nfunction stringifyCircular(obj) {\n    const seen = new Set();\n    return JSON.stringify(obj, (key, value) => {\n        if (typeof value === 'object' && value !== null) {\n            if (seen.has(value)) {\n                return '[Circular]';\n            }\n            seen.add(value);\n        }\n        return value;\n    });\n}\nconst createAngularInputProperty = ({ propertyName, value, argType, }) => {\n    let templateValue;\n    switch (typeof value) {\n        case 'string':\n            templateValue = `'${value}'`;\n            break;\n        case 'object':\n            templateValue = stringifyCircular(value)\n                .replace(/'/g, '\\u2019')\n                .replace(/\\\\\"/g, '\\u201D')\n                .replace(/\"([^-\"]+)\":/g, '$1: ')\n                .replace(/\"/g, \"'\")\n                .replace(/\\u2019/g, \"\\\\'\")\n                .replace(/\\u201D/g, \"\\\\'\")\n                .split(',')\n                .join(', ');\n            break;\n        default:\n            templateValue = value;\n    }\n    return `[${propertyName}]=\"${templateValue}\"`;\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n *\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nexport const computesTemplateSourceFromComponent = (component, initialProps, argTypes) => {\n    const ngComponentMetadata = getComponentDecoratorMetadata(component);\n    if (!ngComponentMetadata) {\n        return null;\n    }\n    if (!ngComponentMetadata.selector) {\n        // Allow to add renderer component when NgComponent selector is undefined\n        return `<ng-container *ngComponentOutlet=\"${component.name}\"></ng-container>`;\n    }\n    const ngComponentInputsOutputs = getComponentInputsOutputs(component);\n    const { inputs: initialInputs, outputs: initialOutputs } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n    const templateInputs = initialInputs.length > 0\n        ? ` ${initialInputs\n            .map((propertyName) => createAngularInputProperty({\n            propertyName,\n            value: initialProps[propertyName],\n            argType: argTypes?.[propertyName],\n        }))\n            .join(' ')}`\n        : '';\n    const templateOutputs = initialOutputs.length > 0\n        ? ` ${initialOutputs.map((i) => `(${i})=\"${formatPropInTemplate(i)}($event)\"`).join(' ')}`\n        : '';\n    return buildTemplate(ngComponentMetadata.selector, '', templateInputs, templateOutputs);\n};\nconst buildTemplate = (selector, innerTemplate, inputs, outputs) => {\n    // https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements\n    const voidElements = [\n        'area',\n        'base',\n        'br',\n        'col',\n        'command',\n        'embed',\n        'hr',\n        'img',\n        'input',\n        'keygen',\n        'link',\n        'meta',\n        'param',\n        'source',\n        'track',\n        'wbr',\n    ];\n    const firstSelector = selector.split(',')[0];\n    const templateReplacers = [\n        [/(^.*?)(?=[,])/, '$1'],\n        [/(^\\..+)/, 'div$1'],\n        [/(^\\[.+?])/, 'div$1'],\n        [/([\\w[\\]]+)(\\s*,[\\w\\s-[\\],]+)+/, `$1`],\n        [/#([\\w-]+)/, ` id=\"$1\"`],\n        [/((\\.[\\w-]+)+)/, (_, c) => ` class=\"${c.split `.`.join ` `.trim()}\"`],\n        [/(\\[.+?])/g, (_, a) => ` ${a.slice(1, -1)}`],\n        [\n            /([\\S]+)(.*)/,\n            (template, elementSelector) => {\n                return voidElements.some((element) => elementSelector === element)\n                    ? template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs} />`)\n                    : template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs}>${innerTemplate}</$1>`);\n            },\n        ],\n    ];\n    return templateReplacers.reduce((prevSelector, [searchValue, replacer]) => prevSelector.replace(searchValue, replacer), firstSelector);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}