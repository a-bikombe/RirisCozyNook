{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Arianna/Code/RirisCozyNook/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { AbstractRenderer } from './AbstractRenderer';\nimport { CanvasRenderer } from './CanvasRenderer';\nimport { DocsRenderer } from './DocsRenderer';\nexport class RendererFactory {\n  constructor() {\n    this.rendererMap = new Map();\n  }\n  getRendererInstance(targetDOMNode) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const targetId = targetDOMNode.id;\n      // do nothing if the target node is null\n      // fix a problem when the docs asks 2 times the same component at the same time\n      // the 1st targetDOMNode of the 1st requested rendering becomes null 🤷‍♂️\n      if (targetDOMNode === null) {\n        return null;\n      }\n      const renderType = getRenderType(targetDOMNode);\n      // keep only instances of the same type\n      if (_this.lastRenderType && _this.lastRenderType !== renderType) {\n        yield AbstractRenderer.resetApplications();\n        clearRootHTMLElement(renderType);\n        _this.rendererMap.clear();\n      }\n      if (!_this.rendererMap.has(targetId)) {\n        _this.rendererMap.set(targetId, _this.buildRenderer(renderType));\n      }\n      _this.lastRenderType = renderType;\n      return _this.rendererMap.get(targetId);\n    })();\n  }\n  buildRenderer(renderType) {\n    if (renderType === 'docs') {\n      return new DocsRenderer();\n    }\n    return new CanvasRenderer();\n  }\n}\nexport const getRenderType = targetDOMNode => {\n  return targetDOMNode.id === 'storybook-root' ? 'canvas' : 'docs';\n};\nexport function clearRootHTMLElement(renderType) {\n  switch (renderType) {\n    case 'canvas':\n      global.document.getElementById('storybook-docs').innerHTML = '';\n      break;\n    case 'docs':\n      global.document.getElementById('storybook-root').innerHTML = '';\n      break;\n    default:\n      break;\n  }\n}","map":{"version":3,"names":["AbstractRenderer","CanvasRenderer","DocsRenderer","RendererFactory","constructor","rendererMap","Map","getRendererInstance","targetDOMNode","_this","_asyncToGenerator","targetId","id","renderType","getRenderType","lastRenderType","resetApplications","clearRootHTMLElement","clear","has","set","buildRenderer","get","global","document","getElementById","innerHTML"],"sources":["C:/Users/Arianna/Code/RirisCozyNook/frontend/node_modules/@storybook/angular/dist/client/angular-beta/RendererFactory.mjs"],"sourcesContent":["import { AbstractRenderer } from './AbstractRenderer';\nimport { CanvasRenderer } from './CanvasRenderer';\nimport { DocsRenderer } from './DocsRenderer';\nexport class RendererFactory {\n    constructor() {\n        this.rendererMap = new Map();\n    }\n    async getRendererInstance(targetDOMNode) {\n        const targetId = targetDOMNode.id;\n        // do nothing if the target node is null\n        // fix a problem when the docs asks 2 times the same component at the same time\n        // the 1st targetDOMNode of the 1st requested rendering becomes null 🤷‍♂️\n        if (targetDOMNode === null) {\n            return null;\n        }\n        const renderType = getRenderType(targetDOMNode);\n        // keep only instances of the same type\n        if (this.lastRenderType && this.lastRenderType !== renderType) {\n            await AbstractRenderer.resetApplications();\n            clearRootHTMLElement(renderType);\n            this.rendererMap.clear();\n        }\n        if (!this.rendererMap.has(targetId)) {\n            this.rendererMap.set(targetId, this.buildRenderer(renderType));\n        }\n        this.lastRenderType = renderType;\n        return this.rendererMap.get(targetId);\n    }\n    buildRenderer(renderType) {\n        if (renderType === 'docs') {\n            return new DocsRenderer();\n        }\n        return new CanvasRenderer();\n    }\n}\nexport const getRenderType = (targetDOMNode) => {\n    return targetDOMNode.id === 'storybook-root' ? 'canvas' : 'docs';\n};\nexport function clearRootHTMLElement(renderType) {\n    switch (renderType) {\n        case 'canvas':\n            global.document.getElementById('storybook-docs').innerHTML = '';\n            break;\n        case 'docs':\n            global.document.getElementById('storybook-root').innerHTML = '';\n            break;\n        default:\n            break;\n    }\n}\n"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAO,MAAMC,eAAe,CAAC;EACzBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;EAChC;EACMC,mBAAmBA,CAACC,aAAa,EAAE;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACrC,MAAMC,QAAQ,GAAGH,aAAa,CAACI,EAAE;MACjC;MACA;MACA;MACA,IAAIJ,aAAa,KAAK,IAAI,EAAE;QACxB,OAAO,IAAI;MACf;MACA,MAAMK,UAAU,GAAGC,aAAa,CAACN,aAAa,CAAC;MAC/C;MACA,IAAIC,KAAI,CAACM,cAAc,IAAIN,KAAI,CAACM,cAAc,KAAKF,UAAU,EAAE;QAC3D,MAAMb,gBAAgB,CAACgB,iBAAiB,CAAC,CAAC;QAC1CC,oBAAoB,CAACJ,UAAU,CAAC;QAChCJ,KAAI,CAACJ,WAAW,CAACa,KAAK,CAAC,CAAC;MAC5B;MACA,IAAI,CAACT,KAAI,CAACJ,WAAW,CAACc,GAAG,CAACR,QAAQ,CAAC,EAAE;QACjCF,KAAI,CAACJ,WAAW,CAACe,GAAG,CAACT,QAAQ,EAAEF,KAAI,CAACY,aAAa,CAACR,UAAU,CAAC,CAAC;MAClE;MACAJ,KAAI,CAACM,cAAc,GAAGF,UAAU;MAChC,OAAOJ,KAAI,CAACJ,WAAW,CAACiB,GAAG,CAACX,QAAQ,CAAC;IAAC;EAC1C;EACAU,aAAaA,CAACR,UAAU,EAAE;IACtB,IAAIA,UAAU,KAAK,MAAM,EAAE;MACvB,OAAO,IAAIX,YAAY,CAAC,CAAC;IAC7B;IACA,OAAO,IAAID,cAAc,CAAC,CAAC;EAC/B;AACJ;AACA,OAAO,MAAMa,aAAa,GAAIN,aAAa,IAAK;EAC5C,OAAOA,aAAa,CAACI,EAAE,KAAK,gBAAgB,GAAG,QAAQ,GAAG,MAAM;AACpE,CAAC;AACD,OAAO,SAASK,oBAAoBA,CAACJ,UAAU,EAAE;EAC7C,QAAQA,UAAU;IACd,KAAK,QAAQ;MACTU,MAAM,CAACC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,SAAS,GAAG,EAAE;MAC/D;IACJ,KAAK,MAAM;MACPH,MAAM,CAACC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,SAAS,GAAG,EAAE;MAC/D;IACJ;MACI;EACR;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}